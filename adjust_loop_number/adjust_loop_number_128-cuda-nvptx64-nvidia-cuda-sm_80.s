//
// Generated by LLVM NVPTX Back-End
//

.version 7.0
.target sm_80
.address_size 64

	// .weak	cudaMalloc

.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .b32 	%r<2>;

	mov.u32 	%r1, 999;
	st.param.b32 	[func_retval0+0], %r1;
	ret;

}
	// .weak	cudaFuncGetAttributes
.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .b32 	%r<2>;

	mov.u32 	%r1, 999;
	st.param.b32 	[func_retval0+0], %r1;
	ret;

}
	// .weak	cudaDeviceGetAttribute
.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .b32 	%r<2>;

	mov.u32 	%r1, 999;
	st.param.b32 	[func_retval0+0], %r1;
	ret;

}
	// .weak	cudaGetDevice
.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .b32 	%r<2>;

	mov.u32 	%r1, 999;
	st.param.b32 	[func_retval0+0], %r1;
	ret;

}
	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessor
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .b32 	%r<2>;

	mov.u32 	%r1, 999;
	st.param.b32 	[func_retval0+0], %r1;
	ret;

}
	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_3,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_4
)
{
	.reg .b32 	%r<2>;

	mov.u32 	%r1, 999;
	st.param.b32 	[func_retval0+0], %r1;
	ret;

}
	// .globl	_Z48Dot_float_float_float_cuda_Dot_8157_block_kernelPfS_S_iiPc
.visible .entry _Z48Dot_float_float_float_cuda_Dot_8157_block_kernelPfS_S_iiPc(
	.param .u64 _Z48Dot_float_float_float_cuda_Dot_8157_block_kernelPfS_S_iiPc_param_0,
	.param .u64 _Z48Dot_float_float_float_cuda_Dot_8157_block_kernelPfS_S_iiPc_param_1,
	.param .u64 _Z48Dot_float_float_float_cuda_Dot_8157_block_kernelPfS_S_iiPc_param_2,
	.param .u32 _Z48Dot_float_float_float_cuda_Dot_8157_block_kernelPfS_S_iiPc_param_3,
	.param .u32 _Z48Dot_float_float_float_cuda_Dot_8157_block_kernelPfS_S_iiPc_param_4,
	.param .u64 _Z48Dot_float_float_float_cuda_Dot_8157_block_kernelPfS_S_iiPc_param_5
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<24>;

	ld.param.u32 	%r9, [_Z48Dot_float_float_float_cuda_Dot_8157_block_kernelPfS_S_iiPc_param_3];
	setp.gt.s32 	%p1, %r9, 127;
	@%p1 bra 	LBB6_7;
	ld.param.u32 	%r8, [_Z48Dot_float_float_float_cuda_Dot_8157_block_kernelPfS_S_iiPc_param_4];
	mov.u32 	%r1, %tid.x;
	and.b32  	%r10, %r1, 31;
	shl.b32 	%r11, %r8, 5;
	and.b32  	%r12, %r11, 1073741792;
	or.b32  	%r3, %r10, %r12;
	setp.gt.u32 	%p2, %r3, 255;
	@%p2 bra 	LBB6_7;
	ld.param.u64 	%rd12, [_Z48Dot_float_float_float_cuda_Dot_8157_block_kernelPfS_S_iiPc_param_0];
	ld.param.u64 	%rd13, [_Z48Dot_float_float_float_cuda_Dot_8157_block_kernelPfS_S_iiPc_param_2];
	cvta.to.global.u64 	%rd1, %rd13;
	ld.param.u64 	%rd14, [_Z48Dot_float_float_float_cuda_Dot_8157_block_kernelPfS_S_iiPc_param_1];
	cvta.to.global.u64 	%rd2, %rd14;
	cvta.to.global.u64 	%rd3, %rd12;
	shr.u32 	%r2, %r1, 5;
	shl.b32 	%r16, %r2, 6;
	add.s32 	%r5, %r16, 64;
	cvt.u64.u32 	%rd4, %r3;
	shl.b32 	%r13, %r2, 14;
	cvt.u64.u32 	%rd15, %r13;
	add.s64 	%rd16, %rd4, %rd15;
	shl.b64 	%rd17, %rd16, 2;
	add.s64 	%rd23, %rd2, %rd17;
	shl.b32 	%r14, %r1, 1;
	cvt.u64.u32 	%rd18, %r14;
	and.b64  	%rd19, %rd18, 1984;
	shl.b64 	%rd20, %rd19, 2;
	add.s64 	%rd22, %rd3, %rd20;
	mov.f32 	%f7, 0f00000000;
LBB6_3:
	ld.global.f32 	%f4, [%rd22];
	ld.global.f32 	%f5, [%rd23];
	fma.rn.f32 	%f7, %f4, %f5, %f7;
	add.s32 	%r16, %r16, 1;
	add.s64 	%rd23, %rd23, 1024;
	add.s64 	%rd22, %rd22, 4;
	setp.lt.u32 	%p3, %r16, %r5;
	@%p3 bra 	LBB6_3;
	setp.eq.s32 	%p4, %r2, 0;
	shl.b64 	%rd21, %rd4, 2;
	add.s64 	%rd7, %rd1, %rd21;
	@%p4 bra 	LBB6_5;
	bra.uni 	LBB6_6;
LBB6_5:
	mov.u32 	%r15, 0;
	st.global.u32 	[%rd7], %r15;
LBB6_6:
	bar.sync 	0;
	atom.global.add.f32 	%f6, [%rd7], %f7;
LBB6_7:
	ret;

}
