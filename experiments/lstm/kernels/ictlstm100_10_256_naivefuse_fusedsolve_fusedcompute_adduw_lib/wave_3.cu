#include "kernels/include/lstmlib.cuh"
__global__ void __launch_bounds__(256, 1)wave3(WaveInputParams *__restrict__ input, WaveModelParams *__restrict__ model,WaveOutputParams *__restrict__ output){switch (blockIdx.x >> 3) {
case 0:call_onekernel_naivefuse_fusedsolve_fusedcompute_adduw(3* LstmScaleParams::kCellNumber10 + 0, 0, 3* LstmScaleParams::kCellNumber10 + 0, LstmScaleParams::kColumsPerBlock32, LstmScaleParams::kHiddenSize256, LstmScaleParams::kInputSize256, LstmScaleParams::kThreadNumPerBlock256, LstmScaleParams::kMask7);break;case 1:call_onekernel_naivefuse_fusedsolve_fusedcompute_adduw(2* LstmScaleParams::kCellNumber10 + 1, 1, 2* LstmScaleParams::kCellNumber10 + 1, LstmScaleParams::kColumsPerBlock32, LstmScaleParams::kHiddenSize256, LstmScaleParams::kInputSize256, LstmScaleParams::kThreadNumPerBlock256, LstmScaleParams::kMask7);break;case 2:call_onekernel_naivefuse_fusedsolve_fusedcompute_adduw(1* LstmScaleParams::kCellNumber10 + 2, 2, 1* LstmScaleParams::kCellNumber10 + 2, LstmScaleParams::kColumsPerBlock32, LstmScaleParams::kHiddenSize256, LstmScaleParams::kInputSize256, LstmScaleParams::kThreadNumPerBlock256, LstmScaleParams::kMask7);break;case 3:call_onekernel_naivefuse_fusedsolve_fusedcompute_adduw(0* LstmScaleParams::kCellNumber10 + 3, 3, 0* LstmScaleParams::kCellNumber10 + 3, LstmScaleParams::kColumsPerBlock32, LstmScaleParams::kHiddenSize256, LstmScaleParams::kInputSize256, LstmScaleParams::kThreadNumPerBlock256, LstmScaleParams::kMask7);break;}
}